
-- MAP ALL USERS BY DB USING A CURSOR



-- =================================================================
--	STEP 1
--	DECLARE THE TABLE TO HOLD THE RESULT
--	DROP TABLE ALL_USERS
-- =================================================================
CREATE TABLE ALL_USERS(
    NAMES NVARCHAR(MAX),
    TYPE_DESCS NVARCHAR(MAX),
	DEFAULT_SCHEMA_NAME NVARCHAR(MAX),
	PERMISSION_NAMES NVARCHAR(MAX),
	STATE_DESC NVARCHAR(MAX),
	CLASS_DESC NVARCHAR(MAX),
	OBJ_NAME NVARCHAR(MAX),
	DBNAME NVARCHAR(MAX)
);

-- =================================================================
--	STEP 2 - RUN THE CURSOR
--	THIS CURSOR HOLDS ALL DATABASE NAMES IN SERVER
-- =================================================================

DECLARE @SQL NVARCHAR(1000);

DECLARE @DB_NAME NVARCHAR(MAX);

DECLARE CURSOR_TABLE CURSOR
	FOR 
		(SELECT 
			[NAME]
		FROM
  			SYS. DATABASES AS DB );

OPEN CURSOR_TABLE




FETCH NEXT FROM CURSOR_TABLE INTO 
	@DB_NAME;



WHILE @@FETCH_STATUS = 0
    BEGIN
		PRINT 'CHEKING DB:';
		PRINT @DB_NAME;

		--USE ' + @DB_NAME + ' 
		SET @SQL = N'			
					INSERT INTO ALL_USERS

					SELECT DISTINCT
						PRINC.[NAME] AS NAMES
						,PRINC.TYPE_DESC AS TYPEDESC
						,PRINC.DEFAULT_SCHEMA_NAME
						,PERM.PERMISSION_NAME AS PERSMNAME
						,PERM.STATE_DESC AS SATAEDESC
						,PERM.CLASS_DESC AS CLASSDESC
						,OBJECT_NAME(PERM.MAJOR_ID) AS OBJNAME
						,(SELECT '''+ @DB_NAME +''') AS DB_NAME

					FROM [' + @DB_NAME + '].SYS.DATABASE_PRINCIPALS PRINC

					LEFT JOIN [' + @DB_NAME + '].SYS.DATABASE_PERMISSIONS PERM							
					ON      PERM.GRANTEE_PRINCIPAL_ID = PRINC.PRINCIPAL_ID	

					WHERE PRINC.[NAME] NOT LIKE ''PUBLIC''
					' ;

		EXECUTE  SP_EXECUTESQL @SQL;
	
        FETCH NEXT FROM CURSOR_TABLE INTO 
			@DB_NAME;
    END;

CLOSE CURSOR_TABLE;
DEALLOCATE CURSOR_TABLE;


SELECT *
FROM ALL_USERS
